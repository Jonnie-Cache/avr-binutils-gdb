2014-02-24  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* gdb/avr-tdep.c: Commenting tidied up.
	(avr_strip_flag_bits): Deleted.
	(avr_make_code_addr): Simplified
	(avr_make_code_ptr): #ifdef'd out
	(avr_make_data_addr): Simplified
	(avr_make_data_ptr): #ifdef'd out
	(avr_address_to_pointer): Comprehensive explanation in
	comments. Simplified and added sanity checks.
	(avr_pointer_to_address): Simplified and added sanity checks.
	(avr_integer_to_address): Simplified and better commenting.
	(avr_write_pc): Mask out flag bits when writing PC.
	(avr_unwind_pc): Add debug of unwound value and correct masking.
	(avr_dummy_id): Add code flags to PC in frame build.
	(avr_push_dummy_call): Remove MSBs from return_pc, make data
	adddress when writing SP.
	(avr_gdbarch_init): Return pointer and address bit sizes to
	upstream values.

2014-02-11  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* gdb/avr-tdep.c (struct gdbarch_tdep): Add back types for code
	and data.
	(avr_register_type): Use AVR arch specific types for code and data
	pointers.
	(avr_make_code_addr): Use flag bits with both addresses and pointers.
	(avr_make_code_ptr): Likewise.
	(avr_make_data_addr): Likewise.
	(avr_make_data_ptr): Likewise.
	(avr_address_to_pointer): Use hex_string rather than
	print_core_address.
	(avr_pointer_to_address): Likewise.
	(avr_gdbarch_init): Initialize custom types.
	(avr_dump_tdep): Print custom types.

2014-02-10  Jeremy Bennett  <jeremy@my.domain.org>

	* gdb/avr-tdep.c: Make X, Y and Z pseudo-regs, remove W (is it
	ever used) and make FP alias of Y, remove pseudo_pc.
	(struct gdbarch_tdep): Remove custom types, use builtin instead.
	(avr_register_name): Add pseudo regs.
	(avr_register_type): Add pseudo regs and use builtin types.
	(avr_pseudo_register_read): Rewritten for X, Y and Z.
	(avr_pseudo_register_write): Likewise.
	(avr_frame_prev_register): Remove reference to PSEUDO_PC_REGNUM.
	(avr_gdbarch_init): Don't set up custom types in tdep.
	(avr_dump_tdep): Remove types no longer in tdep.

2014-01-27  Jeremy Bennett <jeremy.bennett@embecosm.com>

	* avr-tdep.c (avr_dump_tdep): Created.
	(_initialize_avr_tdep): Replace obsolete register_gdbarch_init
	with gdbarch_register.

2014-01-27  Jeremy Bennett <jeremy.bennett@embecosm.com>

	* avr-tdep.c: Improved commenting of address and code pointer
	usage.
	(AVR_CODE_START): Replaces AVR_IMEM_START.
	(AVR_DATA_START): Replaces AVR_SMEM_START.
	(AVR_EEPROM_START, AVR_EEPROM_MASK): Created.
	(avr_debug): Static variable at top level created.
	(avr_make_iaddr, avr_convert_iaddr_to_raw, avr_make_saddr)
	(avr_convert_saddr_to_raw): Deleted.
	(avr_strip_flag_bits, avr_make_code_addr, avr_make_code_ptr)
	(avr_make_data_addr, avr_make_data_ptr): Created.
	(avr_address_to_pointer, avr_pointer_to_address): Add optional
	debug output.
	(avr_integer_to_address): Use avr_make_data_addr instead of
	avr_make_saddr.
	(avr_read_pc, avr_unwind_pc): Explicitly OR in code bit instead of
	calling avr_make_iaddr.
	(avr_frame_unwind_cache, avr_unwind_sp, avr_dummy_id): Use
	avr_make_data_addr instead of avr_make_saddr.
	(avr_push_dummy_call): avr_strip_flag_bits instead of
	avr_convert_iaddr_to_raw.
	(_initialize_avr_tdep): add set/show debug avr as new command.

2013-10-22  Jeremy Bennett <jeremy.bennett@embecosm.com>

	* avr-tdep.c (AVR_MEM_MASK): New value suitable for up to 23-bit
	addresses.
	(avr_gdbarch_init): Set addr_bit to 23.

2013-10-22  Jeremy Bennett <jeremy.bennett@embecosm.com>

	* avr-tdep.c (avr_gdbarch_init): Decrement PC after breakpoint.
